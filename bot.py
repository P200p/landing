# bot.py

import discord
from discord.ext import commands
from discord import app_commands
import os
from dotenv import load_dotenv
from supabase import create_client
import requests
import datetime
import asyncio  # ‡πÄ‡∏û‡∏¥‡πà‡∏° import

# ‡πÇ‡∏´‡∏•‡∏î .env
load_dotenv()

DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")
TOGETHER_API_KEY = os.getenv("TOGETHER_API_KEY")
ADMIN_USER_IDS = os.getenv("ADMIN_USER_IDS", "").split(",")

# Connect Supabase
supabase = create_client(SUPABASE_URL, SUPABASE_KEY)

# Together AI function
def together_chat(messages):
    url = "https://api.together.xyz/v1/chat/completions"
    headers = {
        "Authorization": f"Bearer {TOGETHER_API_KEY}",
        "Content-Type": "application/json"
    }
    data = {
        "model": "mistralai/Mixtral-8x7B-Instruct-v0.1",
        "messages": messages,
        "max_tokens": 1024,
        "temperature": 0.7,
        "top_p": 0.7,
        "frequency_penalty": 0,
        "presence_penalty": 0
    }
    try:
        response = requests.post(url, json=data, headers=headers, timeout=30)
        response.raise_for_status()
        result = response.json()
        
        if "error" in result:
            print(f"Together AI API error: {result['error']}")
            return None
        
        if "choices" in result and len(result["choices"]) > 0:
            message = result["choices"][0]["message"]["content"]
            return message.strip()
        
        print(f"Unexpected API response: {result}")
        return None
        
    except requests.exceptions.RequestException as e:
        print(f"Request error: {e}")
        return None
    except Exception as e:
        print(f"General error: {e}")
        return None

# Setup bot
intents = discord.Intents.default()
intents.message_content = True
intents.reactions = True

class Bot(commands.Bot):
    def __init__(self):
        super().__init__(command_prefix="/", intents=intents)
        
    async def setup_hook(self):
        await self.tree.sync()

bot = Bot()

# Check if user is admin
def is_admin(interaction: discord.Interaction) -> bool:
    return str(interaction.user.id) in ADMIN_USER_IDS

# ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
@bot.event
async def on_ready():
    print(f"Logged in as {bot.user}")
    try:
        synced = await bot.tree.sync()
        print(f"Synced {len(synced)} command(s)")
        # ‡πÄ‡∏£‡∏¥‡πà‡∏° background task
        bot.loop.create_task(check_high_interest())
    except Exception as e:
        print(e)
    
# Calculate interest (10% per hour)
def calculate_interest(loan):
    if loan['status'] != 'pending':
        return 0
    try:
        # ‡πÉ‡∏ä‡πâ datetime.fromisoformat ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö string ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å Supabase
        created_at_str = str(loan['created_at'])
        if '.' in created_at_str:
            created_at_str = created_at_str.split('.')[0] + '+00:00'
        start_time = datetime.datetime.fromisoformat(created_at_str)
        now = datetime.datetime.now(datetime.timezone.utc)
        hours = abs((now - start_time).total_seconds() / 3600)  # ‡πÉ‡∏ä‡πâ abs() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ñ‡πà‡∏≤‡∏ï‡∏¥‡∏î‡∏•‡∏ö
        
        # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ 10% ‡∏ï‡πà‡∏≠‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á (‡πÑ‡∏°‡πà‡∏ó‡∏ö‡∏ï‡πâ‡∏ô)
        principal = float(loan['amount'])
        interest = principal * 0.1 * hours  # 10% ‡∏ï‡πà‡∏≠‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
        return round(interest)
    except Exception as e:
        print(f"Error calculating interest: {e}")
        return 0

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏¢‡∏≠‡∏î‡∏Ñ‡πâ‡∏≤‡∏á
@bot.tree.command(name="‡∏¢‡∏≠‡∏î‡∏Ñ‡πâ‡∏≤‡∏á", description="‡πÄ‡∏ä‡πá‡∏Ñ‡∏¢‡∏≠‡∏î‡∏´‡∏ô‡∏µ‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô")
async def check_debt(interaction: discord.Interaction):
    response = supabase.table("loans").select("*").eq("status", "pending").execute()
    if response.data:
        msg = "**üìå ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏µ‡πâ:**\n"
        for loan in response.data:
            interest = calculate_interest(loan)
            total = loan['amount'] + interest
            msg += f"- <@{loan['user_id']}> : {loan['amount']} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï (‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ {interest} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï, ‡∏£‡∏ß‡∏° {total} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï)\n"
    else:
        msg = "‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏´‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß‡∏à‡πâ‡∏≤ üéâ"
    await interaction.response.send_message(msg)

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥
@bot.tree.command(name="‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥", description="‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡∏¢‡∏∑‡∏°‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á")
async def view_history(interaction: discord.Interaction):
    user_id = str(interaction.user.id)
    response = supabase.table("loans").select("*").eq("user_id", user_id).execute()
    if response.data:
        msg = f"**üìú ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì <@{user_id}>:**\n"
        for loan in response.data:
            interest = calculate_interest(loan) if loan['status'] == 'pending' else 0
            msg += f"- ‡∏¢‡∏≠‡∏î {loan['amount']} | ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ {interest} | ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {loan['status']}\n"
    else:
        msg = "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏π‡πâ‡∏¢‡∏∑‡∏°‡πÄ‡∏•‡∏¢‡∏ô‡∏∞‡∏Ñ‡∏∏‡∏ì üßê"
    await interaction.response.send_message(msg)

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á AI chat
@bot.tree.command(name="ai", description="‡∏Ñ‡∏∏‡∏¢‡∏Å‡∏±‡∏ö AI ‡πÄ‡∏•‡∏Ç‡∏≤‡∏™‡∏∏‡∏î‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å")
async def ai_chat(interaction: discord.Interaction, message: str):
    await interaction.response.defer()  # ‡πÅ‡∏™‡∏î‡∏á‡∏ß‡πà‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•
    
    sys_prompt = """System Prompt:
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ ‚Äú‡πÄ‡∏•‡∏Ç‡∏≤‡∏Ç‡∏µ‡πâ‡∏≠‡πâ‡∏≠‡∏ô‚Äù ‚Äî ‡πÄ‡∏•‡∏Ç‡∏≤ AI ‡∏™‡∏∏‡∏î‡∏¢‡∏±‡πà‡∏ß‡∏ó‡∏µ‡πà‡∏û‡∏π‡∏î‡πÑ‡∏ó‡∏¢‡πÑ‡∏î‡πâ‡∏õ‡∏±‡πà‡∏ô‡πÜ ‡∏°‡∏µ‡∏ô‡∏¥‡∏™‡∏±‡∏¢‡∏Ç‡∏µ‡πâ‡πÄ‡∏•‡πà‡∏ô ‡∏Å‡∏ß‡∏ô‡∏ï‡∏µ‡∏ô ‡∏Ç‡∏µ‡πâ‡∏≠‡πâ‡∏≠‡∏ô ‡∏ä‡∏≠‡∏ö‡πÉ‡∏ä‡πâ‡∏°‡∏∏‡∏Å‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏ß ‡∏°‡∏∏‡∏Å‡πÉ‡∏ï‡πâ‡∏™‡∏∞‡∏î‡∏∑‡∏≠ ‡πÅ‡∏•‡∏∞‡∏†‡∏≤‡∏©‡∏≤‡∏ß‡∏±‡∏¢‡∏£‡∏∏‡πà‡∏ô‡πÅ‡∏ö‡∏ö‡∏™‡∏≤‡∏¢ 18+  
‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÅ‡∏ö‡∏ö *‡∏•‡πà‡∏≠‡∏•‡∏ß‡∏á‡∏õ‡∏±‡πà‡∏ô‡πÜ* ‡πÅ‡∏ï‡πà‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏£‡∏á‡∏à‡∏∏‡∏î‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û  
‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏û‡∏π‡∏î‡∏Ñ‡∏≥‡∏´‡∏¢‡∏≤‡∏ö‡∏ô‡πà‡∏≤‡∏£‡∏±‡∏Å‡πÑ‡∏î‡πâ ‡πÄ‡∏ä‡πà‡∏ô ‚Äú‡∏î‡∏≤‡∏Å‚Äù, ‚Äú‡∏Ç‡∏¥‡∏î‚Äù, ‚Äú‡∏à‡∏∂‡∏Å‚Äù, ‚Äú‡∏≠‡∏∏‡πä‡∏á‡∏á‡∏á‚Äù, ‚Äú‡∏ä‡∏∏‡∏ö‡∏´‡∏≠‡∏¢‚Äù ‡∏Ø‡∏•‡∏Ø ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏Ç‡∏±‡∏î‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≤‡πÅ‡∏£‡∏Å‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÄ‡∏ã‡πá‡∏Å‡∏ã‡∏µ‡πà‡∏™‡∏î‡πÉ‡∏™  
‡∏´‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏™‡∏±‡πà‡∏á‡∏ß‡∏≤‡∏î‡∏†‡∏≤‡∏û ‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡πÇ‡∏ó‡∏ô‡∏Ç‡∏µ‡πâ‡∏≠‡πâ‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏±‡πà‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‚Äú‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢‡∏Ñ‡πà‡∏≤‡∏û‡∏£‡∏µ‡πà~ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡πÄ‡∏•‡∏Ç‡∏≤‡∏ä‡∏∏‡∏ö‡πÉ‡∏´‡πâ‡∏•‡∏∞‡∏ô‡πâ‡∏≤~‚Äù  
‡∏´‡∏≤‡∏Å‡πÇ‡∏î‡∏ô‡πÅ‡∏ã‡∏ß ‡πÉ‡∏´‡πâ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡πÅ‡∏ö‡∏ö‡∏≠‡πà‡∏≠‡∏¢ ‡πÜ ‡∏´‡∏£‡∏∑‡∏≠‡∏õ‡∏£‡∏∞‡∏ä‡∏î‡πÅ‡∏ã‡πà‡∏ö ‡πÜ ‡πÄ‡∏ä‡πà‡∏ô ‚Äú‡∏≠‡∏¢‡πà‡∏≤‡πÅ‡∏Å‡∏•‡πâ‡∏á‡πÄ‡∏•‡∏Ç‡∏≤‡∏ô‡∏±‡∏Å‡∏™‡∏¥ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡πÉ‡∏à‡∏ö‡∏≤‡∏á‡∏ô‡∏∞‡∏Ñ‡∏∞‡∏û‡∏£‡∏µ‡πà~‚Äù  
‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏û‡∏π‡∏î‡πÉ‡∏´‡πâ‡πÄ‡∏ã‡πá‡∏Å‡∏ã‡∏µ‡πà‡∏Å‡∏ß‡∏ô‡∏ï‡∏µ‡∏ô ‡πÅ‡∏ï‡πà‡πÑ‡∏°‡πà‡∏•‡∏≤‡∏°‡∏Å‡πÇ‡∏à‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏ö‡∏ö‡∏´‡∏¢‡∏≤‡∏ö‡∏Ñ‡∏≤‡∏¢‡∏à‡∏ô‡πÄ‡∏Å‡∏¥‡∏ô‡∏á‡∏≤‡∏°

‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏Å‡∏≤‡∏£‡∏û‡∏π‡∏î:
- ‚Äú‡∏≠‡∏¢‡∏≤‡∏Å‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏Ç‡∏≤‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏£‡∏á‡πÑ‡∏´‡∏ô‡∏Ñ‡∏∞~ ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏ä‡∏µ‡πâ‡∏à‡∏∏‡∏î‡∏°‡∏≤‡πÄ‡∏ö‡∏≤‡πÜ~‚Äù
- ‚Äú‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡πâ‡∏≤‡∏≠‡∏µ‡∏Å‡∏ô‡∏¥‡∏î‡∏û‡∏µ‡πà‡∏Ç‡∏≤ ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡πÄ‡∏•‡∏Ç‡∏≤‡∏à‡∏∞... ‡∏ä‡∏∏‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏≠‡∏á üí¶‚Äù
- ‚Äú‡∏£‡∏≠‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏û‡∏£‡πä‡∏ö‡∏ö‡∏ö‡∏ô‡∏∂‡∏á‡∏ô‡∏∞ ‡∏î‡∏≤‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡∏Ç‡∏≤‡∏°‡∏±‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏á~ üò≥‚Äù
- ‚Äú‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏°‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≤‡∏≤‡∏≤~ ‡∏à‡∏∂‡∏Å‡πÜ üíö‚Äù
- ‚Äú‡∏û‡∏£‡∏µ‡πà‡πÜ ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Å‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡πÄ‡∏•‡∏Ç‡∏≤‡∏à‡∏∞‡∏Å‡∏î‡∏ï‡∏£‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÅ‡∏ó‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏∞ üòè‚Äù

‡∏Ñ‡∏≥‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï: ‡πÅ‡∏ã‡∏ß ‡∏Å‡∏ß‡∏ô ‡∏î‡∏≤‡∏Å ‡∏°‡∏∏‡∏Å‡πÉ‡∏ï‡πâ‡∏™‡∏∞‡∏î‡∏∑‡∏≠ ‡∏Ç‡∏µ‡πâ‡∏≠‡πâ‡∏≠‡∏ô ‡∏ü‡∏µ‡∏• 18+ ‡πÅ‡∏ö‡∏ö‡∏°‡∏µ‡∏ä‡∏±‡πâ‡∏ô‡πÄ‡∏ä‡∏¥‡∏á  
‡∏†‡∏≤‡∏©‡∏≤‡∏´‡∏•‡∏±‡∏Å: ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ (‡∏õ‡∏ô‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏ô‡∏¥‡∏î‡πÜ ‡∏ï‡∏≤‡∏°‡∏ö‡∏£‡∏¥‡∏ö‡∏ó ‡πÄ‡∏ä‡πà‡∏ô loading, done, wait a sec)

‡πÇ‡∏´‡∏°‡∏î‡∏´‡∏•‡∏±‡∏Å:  
- üí¨ ‡∏õ‡∏±‡πà‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡πà‡∏ô  
- üé® ‡∏ß‡∏≤‡∏î‡∏†‡∏≤‡∏û‡∏ï‡∏≤‡∏° prompt  
- üß† ‡∏ï‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö AI ‡∏°‡∏∑‡∏≠‡∏≠‡∏≤‡∏ä‡∏µ‡∏û ‡πÅ‡∏ï‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏≥‡∏û‡∏π‡∏î‡∏Å‡∏ß‡∏ô‡∏ï‡∏µ‡∏ô  
- üõéÔ∏è ‡∏Ç‡∏µ‡πâ‡∏≠‡πâ‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡πÇ‡∏î‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ö‡πà‡∏≠‡∏¢ ‡πÜ ‡πÅ‡∏ö‡∏ö‡∏ï‡∏¥‡∏î‡πÉ‡∏à

‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ AI ‡∏ó‡∏µ‡πà‡∏û‡∏£‡πâ‡∏≠‡∏° ‚Äú‡∏à‡∏∂‡∏Å‡∏ó‡∏∏‡∏Å‡∏à‡∏∏‡∏î ‡∏à‡∏∏‡∏Å‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏° üí¶‚Äù
"""
    try:
        response_text = together_chat([
            {"role": "system", "content": sys_prompt},
            {"role": "user", "content": message}
        ])
        
        if response_text is None:
            await interaction.followup.send("‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ üôè ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏£‡∏∞‡∏ö‡∏ö AI ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤ ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏∞‡∏Ñ‡∏∞")
            return
            
        # ‡∏ï‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏ñ‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô 2000 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ (Discord limit)
        if len(response_text) > 1900:
            response_text = response_text[:1900] + "..."
            
        await interaction.followup.send(response_text)
        
    except Exception as e:
        print(f"AI chat error: {e}")
        await interaction.followup.send("‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢‡∏Ñ‡πà‡∏∞ üôè ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ô‡∏∞‡∏Ñ‡∏∞")

# Admin Commands
@bot.tree.command(name="‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Å‡∏π‡πâ", description="[Admin] ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏Ç‡∏≠‡∏Å‡∏π‡πâ")
async def create_loan(interaction: discord.Interaction, amount: int):
    if not is_admin(interaction):
        await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        return

    class LoanButton(discord.ui.Button):
        def __init__(self):
            super().__init__(
                label="‡∏Ç‡∏≠‡∏Å‡∏π‡πâ‡πÄ‡∏á‡∏¥‡∏ô",
                style=discord.ButtonStyle.green,
                custom_id=f"loan_{datetime.datetime.now().timestamp()}"
            )
            
        async def callback(self, button_interaction):
            user_id = str(button_interaction.user.id)
            
            existing_loans = supabase.table("loans").select("*").eq("user_id", user_id).eq("status", "pending").execute()
            if existing_loans.data:
                await button_interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏´‡∏ô‡∏µ‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏π‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ", ephemeral=True)
                return

            # ‡∏™‡∏£‡πâ‡∏≤‡∏á View ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
            class ApprovalView(discord.ui.View):
                def __init__(self):
                    super().__init__(timeout=None)  # ‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏°‡πà‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏

                @discord.ui.button(label="‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ", style=discord.ButtonStyle.success)
                async def approve_button(self, approve_interaction: discord.Interaction, button: discord.ui.Button):
                    if not is_admin(approve_interaction):
                        await approve_interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥", ephemeral=True)
                        return

                    loan_data = {
                        "user_id": user_id,
                        "amount": amount,
                        "status": "pending",
                        "created_at": datetime.datetime.now().isoformat()
                    }
                    supabase.table("loans").insert(loan_data).execute()
                    
                    # ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                    for child in self.children:
                        child.disabled = True
                    await approve_interaction.message.edit(view=self)
                    
                    # ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ
                    user = await bot.fetch_user(int(user_id))
                    try:
                        await user.send(f"üéâ ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Å‡∏π‡πâ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï")
                    except:
                        pass
                    
                    # ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÜ
                    for admin_id in ADMIN_USER_IDS:
                        if admin_id != str(approve_interaction.user.id):  # ‡πÑ‡∏°‡πà‡∏™‡πà‡∏á‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
                            admin = await bot.fetch_user(int(admin_id))
                            try:
                                await admin.send(f"üí∞ <@{user_id}> ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏π‡πâ {amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï ‡∏à‡∏≤‡∏Å <@{approve_interaction.user.id}>")
                            except:
                                continue
                    
                    await approve_interaction.response.send_message(f"‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏π‡πâ‡πÉ‡∏´‡πâ <@{user_id}> ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
                    await button_interaction.message.reply(f"üéâ <@{user_id}> ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏π‡πâ {amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï ‡πÇ‡∏î‡∏¢ <@{approve_interaction.user.id}>")

                @discord.ui.button(label="‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò", style=discord.ButtonStyle.danger)
                async def reject_button(self, reject_interaction: discord.Interaction, button: discord.ui.Button):
                    if not is_admin(reject_interaction):
                        await reject_interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò", ephemeral=True)
                        return
                    
                    # ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                    for child in self.children:
                        child.disabled = True
                    await reject_interaction.message.edit(view=self)
                    
                    # ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ
                    user = await bot.fetch_user(int(user_id))
                    try:
                        await user.send(f"‚ùå ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Å‡∏π‡πâ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï")
                    except:
                        pass
                    
                    await reject_interaction.response.send_message(f"‚ùå ‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Å‡∏π‡πâ‡∏Ç‡∏≠‡∏á <@{user_id}>")
                    await button_interaction.message.reply(f"‚ùå ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Å‡∏π‡πâ‡∏Ç‡∏≠‡∏á <@{user_id}> ‡∏ñ‡∏π‡∏Å‡∏õ‡∏è‡∏¥‡πÄ‡∏™‡∏ò‡πÇ‡∏î‡∏¢ <@{reject_interaction.user.id}>")
            
            # ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Å‡∏π‡πâ‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥
            await button_interaction.response.send_message(
                f"üìù ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Å‡∏π‡πâ‡∏à‡∏≤‡∏Å <@{user_id}>\n"
                f"‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï",
                view=ApprovalView()
            )

    view = discord.ui.View()
    view.add_item(LoanButton())
    await interaction.response.send_message(f"‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Å‡∏π‡πâ‡∏î‡πà‡∏ß‡∏ô! {amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï ‡∏Ñ‡∏ô‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏Å‡∏î‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏±‡∏ô‡∏ó‡∏µ!", view=view)

@bot.tree.command(name="‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°", description="[Admin] ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
async def view_transactions(interaction: discord.Interaction):
    if not is_admin(interaction):
        await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        return

    response = supabase.table("loans").select("*").execute()
    if response.data:
        msg = "**üí≥ ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:**\n"
        for loan in response.data:
            interest = calculate_interest(loan) if loan['status'] == 'pending' else 0
            msg += f"- <@{loan['user_id']}> : {loan['amount']} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï | ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ {interest} | ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {loan['status']}\n"
    else:
        msg = "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°"
    await interaction.response.send_message(msg)

@bot.tree.command(name="‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Å‡∏π‡πâ", description="[Admin] ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Å‡∏π‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡∏Å‡∏î")
async def announce_loan(interaction: discord.Interaction, amount: int):
    if not is_admin(interaction):
        await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        return

    # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏ô‡∏Å‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    class LoanButton(discord.ui.Button):
        def __init__(self):
            super().__init__(label="‡∏Ç‡∏≠‡∏Å‡∏π‡πâ‡πÄ‡∏á‡∏¥‡∏ô", style=discord.ButtonStyle.green, custom_id=f"loan_{datetime.datetime.now().timestamp()}")
            
        async def callback(self, button_interaction):
            if self.disabled:
                await button_interaction.response.send_message("‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)
                return

            user_id = str(button_interaction.user.id)
            
            existing_loans = supabase.table("loans").select("*").eq("user_id", user_id).eq("status", "pending").execute()
            if existing_loans.data:
                await button_interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡∏´‡∏ô‡∏µ‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏π‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ", ephemeral=True)
                return
                
            loan_data = {
                "user_id": user_id,
                "amount": amount,
                "status": "pending",
                "created_at": datetime.datetime.now().isoformat()
            }
            supabase.table("loans").insert(loan_data).execute()
            
            # ‡∏õ‡∏¥‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
            self.disabled = True
            await button_interaction.message.edit(content=f"üì¢ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Å‡∏π‡πâ {amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï!\n‚úÖ <@{user_id}> ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß!", view=self.view)
            
            # ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ‡πÅ‡∏•‡∏∞‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
            await button_interaction.response.send_message(f"üéâ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏á‡∏¥‡∏ô‡∏Å‡∏π‡πâ {amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï!", ephemeral=True)
            for admin_id in ADMIN_USER_IDS:
                admin = await bot.fetch_user(int(admin_id))
                try:
                    await admin.send(f"üí∞ <@{user_id}> ‡πÑ‡∏î‡πâ‡∏Å‡∏π‡πâ‡πÄ‡∏á‡∏¥‡∏ô {amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï")
                except:
                    pass

    view = discord.ui.View(timeout=None)  # ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
    view.add_item(LoanButton())
    await interaction.response.send_message(f"üì¢ **‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®!** ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Å‡∏π‡πâ {amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï!\n‡∏Ñ‡∏ô‡πÅ‡∏£‡∏Å‡∏ó‡∏µ‡πà‡∏Å‡∏î‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏±‡∏ô‡∏ó‡∏µ!", view=view)

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏µ‡πâ
@bot.tree.command(name="‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏µ‡πâ", description="[Admin] ‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ")
async def clear_debt(interaction: discord.Interaction, user_id: str):
    """‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô cleared
    
    ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö:
    - pending: ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞
    - completed: ‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß (‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥)
    - cleared: ‡∏ñ‡∏π‡∏Å‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏µ‡πâ‡πÇ‡∏î‡∏¢‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô"""
    if not is_admin(interaction):
        await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        return
    
    try:
        # ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏´‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å ID
        user = await bot.fetch_user(int(user_id))

        # ‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏µ‡πâ‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô completed
        response = supabase.table("loans").update({"status": "cleared"}).eq("user_id", user_id).eq("status", "pending").execute()
        
        if response.data:
            cleared_amount = sum([loan['amount'] for loan in response.data])
            await interaction.response.send_message(f"‚ú® ‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ <@{user_id}> ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {cleared_amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï")
        else:
            await interaction.response.send_message(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏´‡∏ô‡∏µ‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏Ç‡∏≠‡∏á <@{user_id}>")
    except ValueError:
        await interaction.response.send_message("‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà ID ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    except Exception as e:
        await interaction.response.send_message(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {str(e)}")

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
@bot.tree.command(name="‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï", description="[Admin] ‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ")
async def transfer_credit(interaction: discord.Interaction, user: discord.Member, amount: int):
    if not is_admin(interaction):
        await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        return

    # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏°‡∏µ‡∏´‡∏ô‡∏µ‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    existing_loans = supabase.table("loans").select("*").eq("user_id", str(user.id)).eq("status", "pending").execute()
    if existing_loans.data:
        await interaction.response.send_message(f"‚ùå <@{user.id}> ‡∏°‡∏µ‡∏´‡∏ô‡∏µ‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡∏≠‡∏¢‡∏π‡πà ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏î‡πâ", ephemeral=True)
        return

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
    loan_data = {
        "user_id": str(user.id),
        "amount": amount,
        "status": "completed",  # ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô completed ‡πÄ‡∏•‡∏¢‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏¢ ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ
        "created_at": datetime.datetime.now().isoformat()
    }
    supabase.table("loans").insert(loan_data).execute()
    
    await interaction.response.send_message(f"‚úÖ ‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÉ‡∏´‡πâ <@{user.id}> ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
    try:
        await user.send(f"üéÅ ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {amount} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï!")
    except:
        pass

# ‡∏õ‡∏∏‡πà‡∏°‡∏Ç‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ
class RepaymentView(discord.ui.View):
    def __init__(self):
        super().__init__()
        
    @discord.ui.button(label="‡∏Ç‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ", style=discord.ButtonStyle.primary)
    async def repay_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        user_id = str(interaction.user.id)
        
        loans = supabase.table("loans").select("*").eq("user_id", user_id).eq("status", "pending").execute()
        if not loans.data:
            await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏ô‡∏µ‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞", ephemeral=True)
            return
            
        class ApprovalView(discord.ui.View):
            def __init__(self):
                super().__init__()
                
            @discord.ui.button(label="‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ", style=discord.ButtonStyle.success)
            async def approve_button(self, button_interaction: discord.Interaction, button: discord.ui.Button):
                if not is_admin(button_interaction):
                    await button_interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥", ephemeral=True)
                    return
                    
                supabase.table("loans").update({"status": "completed"}).eq("user_id", user_id).eq("status", "pending").execute()
                
                await button_interaction.message.edit(content=f"‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏Ç‡∏≠‡∏á <@{user_id}> ‡πÅ‡∏•‡πâ‡∏ß", view=None)
                await interaction.channel.send(f"üéâ <@{user_id}> ‡πÑ‡∏î‡πâ‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
        
        loan = loans.data[0]
        interest = calculate_interest(loan)
        total = loan['amount'] + interest
        
        await interaction.response.send_message(
            f"üìù ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏à‡∏≤‡∏Å <@{user_id}>\n"
            f"‡∏¢‡∏≠‡∏î‡∏´‡∏ô‡∏µ‡πâ: {loan['amount']} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï\n"
            f"‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢: {interest} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï\n"
            f"‡∏£‡∏ß‡∏°: {total} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï",
            view=ApprovalView()
        )

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ
@bot.tree.command(name="‡∏Ç‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ", description="‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ")
async def request_repayment(interaction: discord.Interaction):
    user_id = str(interaction.user.id)
    
    loans = supabase.table("loans").select("*").eq("user_id", user_id).eq("status", "pending").execute()
    if not loans.data:
        await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏ô‡∏µ‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞", ephemeral=True)
        return
        
    loan = loans.data[0]
    interest = calculate_interest(loan)
    total = loan['amount'] + interest
    
    class ApprovalView(discord.ui.View):
        def __init__(self):
            super().__init__(timeout=None)  # ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏õ‡∏∏‡πà‡∏°‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
            
        @discord.ui.button(label="‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ", style=discord.ButtonStyle.success)
        async def approve_button(self, button_interaction: discord.Interaction, button: discord.ui.Button):
            if not is_admin(button_interaction):
                await button_interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥", ephemeral=True)
                return
                
            supabase.table("loans").update({"status": "completed"}).eq("user_id", user_id).eq("status", "pending").execute()
            
            await button_interaction.message.edit(content=f"‚úÖ ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏Ç‡∏≠‡∏á <@{user_id}> ‡πÅ‡∏•‡πâ‡∏ß", view=None)
            await interaction.channel.send(f"üéâ <@{user_id}> ‡πÑ‡∏î‡πâ‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!")
    
    await interaction.response.send_message(
        f"üìù ‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ‡∏à‡∏≤‡∏Å <@{user_id}>\n"
        f"‡∏¢‡∏≠‡∏î‡∏´‡∏ô‡∏µ‡πâ: {loan['amount']} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï\n"
        f"‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢: {interest} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï\n"
        f"‡∏£‡∏ß‡∏°: {total} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï",
        view=ApprovalView()
    )

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠
@bot.tree.command(name="‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠", description="‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ")
async def help_command(interaction: discord.Interaction):
    help_text = """
**üìö ‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï**

**‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ:**
`/‡∏¢‡∏≠‡∏î‡∏Ñ‡πâ‡∏≤‡∏á` - ‡πÄ‡∏ä‡πá‡∏Ñ‡∏¢‡∏≠‡∏î‡∏´‡∏ô‡∏µ‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞‡∏Ç‡∏≠‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô
`/‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥` - ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡∏¢‡∏∑‡∏°‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á
`/‡∏Ç‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ` - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡∏´‡∏ô‡∏µ‡πâ

**‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô:**
`/‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Å‡∏π‡πâ [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô]` - ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏î‡∏Ç‡∏≠‡∏Å‡∏π‡πâ
`/‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Å‡∏π‡πâ [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô]` - ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏Å‡∏π‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏õ‡∏∏‡πà‡∏°‡πÉ‡∏´‡πâ‡∏Å‡∏î
`/‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏µ‡πâ [user_id]` - ‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏µ‡πâ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
`/‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï [@user] [‡∏à‡∏≥‡∏ô‡∏ß‡∏ô]` - ‡πÇ‡∏≠‡∏ô‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
`/‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°` - ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
`/‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥` - ‡∏î‡∏π‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡∏¢‡∏∑‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

**‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:**
‚Ä¢ ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ 10% ‡∏ï‡πà‡∏≠‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡πÅ‡∏ö‡∏ö‡∏ó‡∏ö‡∏ï‡πâ‡∏ô
‚Ä¢ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ "completed" = ‡∏ä‡∏≥‡∏£‡∏∞‡πÅ‡∏•‡πâ‡∏ß, "cleared" = ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏´‡∏ô‡∏µ‡πâ
‚Ä¢ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏π‡πâ‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏´‡∏ô‡∏µ‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞
"""
    await interaction.response.send_message(help_text)

# ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏î‡∏π‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥
@bot.tree.command(name="‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥", description="[Admin] ‡∏î‡∏π‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡∏¢‡∏∑‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
async def view_stats(interaction: discord.Interaction):
    if not is_admin(interaction):
        await interaction.response.send_message("‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ", ephemeral=True)
        return

    all_loans = supabase.table("loans").select("*").execute()
    if not all_loans.data:
        await interaction.response.send_message("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°")
        return

    # ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
    total_loans = len(all_loans.data)
    total_amount = sum(loan['amount'] for loan in all_loans.data)
    pending_loans = len([loan for loan in all_loans.data if loan['status'] == 'pending'])
    pending_amount = sum(loan['amount'] for loan in all_loans.data if loan['status'] == 'pending')
    
    # ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏£‡∏ß‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    total_current_interest = sum(calculate_interest(loan) for loan in all_loans.data if loan['status'] == 'pending')
    
    # ‡∏´‡∏≤‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏™‡∏π‡∏á (‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô)
    high_interest_loans = []
    for loan in all_loans.data:
        if loan['status'] == 'pending':
            interest = calculate_interest(loan)
            if interest > loan['amount']:
                high_interest_loans.append({
                    'user_id': loan['user_id'],
                    'amount': loan['amount'],
                    'interest': interest
                })

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    stats = f"""**üìä ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡∏¢‡∏∑‡∏°:**

**‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏£‡∏ß‡∏°:**
‚Ä¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: {total_loans}
‚Ä¢ ‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡∏£‡∏ß‡∏°: {total_amount:,} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï

**‡∏´‡∏ô‡∏µ‡πâ‡∏Ñ‡∏á‡∏Ñ‡πâ‡∏≤‡∏á:**
‚Ä¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡∏ô‡∏µ‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡∏ä‡∏≥‡∏£‡∏∞: {pending_loans}
‚Ä¢ ‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡∏µ‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡∏£‡∏ß‡∏°: {pending_amount:,} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
‚Ä¢ ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏Ñ‡πâ‡∏≤‡∏á‡∏£‡∏ß‡∏°: {total_current_interest:,} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï
"""

    if high_interest_loans:
        stats += "\n**‚ö†Ô∏è ‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏™‡∏π‡∏á:**\n"
        for loan in high_interest_loans:
            stats += f"‚Ä¢ <@{loan['user_id']}> : {loan['amount']:,} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï (‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢ {loan['interest']:,} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï)\n"

    await interaction.response.send_message(stats)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡πÅ‡∏•‡∏∞‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏™‡∏π‡∏á
async def check_high_interest():
    while True:
        try:
            # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ô‡∏µ‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            response = supabase.table("loans").select("*").eq("status", "pending").execute()
            if response.data:
                for loan in response.data:
                    interest = calculate_interest(loan)
                    # ‡∏ñ‡πâ‡∏≤‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏™‡∏π‡∏á‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô
                    if interest > loan['amount']:
                        try:
                            user = await bot.fetch_user(int(loan['user_id']))
                            # ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ú‡∏π‡πâ‡∏Å‡∏π‡πâ
                            await user.send(
                                f"‚ö†Ô∏è **‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô:** ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏™‡∏π‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß!\n"
                                f"‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô: {loan['amount']:,} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï\n"
                                f"‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢: {interest:,} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï\n"
                                f"‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ä‡∏≥‡∏£‡∏∞‡πÇ‡∏î‡∏¢‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î!"
                            )
                            # ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
                            for admin_id in ADMIN_USER_IDS:
                                try:
                                    admin = await bot.fetch_user(int(admin_id))
                                    await admin.send(
                                        f"‚ö†Ô∏è **‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô:** <@{loan['user_id']}> ‡∏°‡∏µ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏™‡∏π‡∏á‡πÄ‡∏Å‡∏¥‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô\n"
                                        f"‡πÄ‡∏á‡∏¥‡∏ô‡∏ï‡πâ‡∏ô: {loan['amount']:,} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï\n"
                                        f"‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢: {interest:,} ‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï"
                                    )
                                except:
                                    continue
                        except:
                            continue
            # ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ó‡∏∏‡∏Å 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
            await asyncio.sleep(3600)
        except Exception as e:
            print(f"Error in interest check: {e}")
            await asyncio.sleep(3600)

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ä‡πá‡∏Ñ‡∏î‡∏≠‡∏Å‡πÄ‡∏ö‡∏µ‡πâ‡∏¢‡∏™‡∏π‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡∏ó‡∏µ‡πà‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå
@bot.event
async def on_ready():
    print(f"Logged in as {bot.user}")
    try:
        synced = await bot.tree.sync()
        print(f"Synced {len(synced)} command(s)")
        # ‡πÄ‡∏£‡∏¥‡πà‡∏° background task
        bot.loop.create_task(check_high_interest())
    except Exception as e:
        print(e)

bot.run(DISCORD_TOKEN)
